"use strict";(()=>{var e={};e.id=59476,e.ids=[59476],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},57147:e=>{e.exports=require("fs")},71017:e=>{e.exports=require("path")},61218:(e,t,s)=>{s.r(t),s.d(t,{headerHooks:()=>m,originalPathname:()=>S,requestAsyncStorage:()=>v,routeModule:()=>f,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>w});var r={};s.r(r),s.d(r,{GET:()=>d,POST:()=>l}),s(95655);var n=s(83323),i=s(54647),a=s(57147),o=s.n(a),p=s(71017),u=s.n(p);let c=u().join(process.cwd(),"data","screen-types.json");async function d(e){try{if(!o().existsSync(c))return new Response(JSON.stringify([]),{status:200,headers:{"Content-Type":"application/json"}});{let e=o().readFileSync(c,"utf-8");return new Response(e,{status:200,headers:{"Content-Type":"application/json"}})}}catch(e){return new Response(JSON.stringify({error:"Ekran tipleri okunamadÄ±."}),{status:500})}}async function l(e){try{let t=await e.json();return o().writeFileSync(c,JSON.stringify(t,null,2),"utf-8"),new Response(JSON.stringify({success:!0}),{status:200})}catch(e){return new Response(JSON.stringify({error:"Ekran tipleri kaydedilemedi."}),{status:500})}}let y=n.AppRouteRouteModule,f=new y({definition:{kind:i.x.APP_ROUTE,page:"/api/services/screen-types/route",pathname:"/api/services/screen-types",filename:"route",bundlePath:"app/api/services/screen-types/route"},resolvedPagePath:"C:\\Users\\ibrahim\\Downloads\\zero-git\\app\\api\\services\\screen-types\\route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:v,staticGenerationAsyncStorage:g,serverHooks:h,headerHooks:m,staticGenerationBailout:w}=f,S="/api/services/screen-types/route"}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[26405],()=>s(61218));module.exports=r})();
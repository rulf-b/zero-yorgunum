"use strict";(()=>{var e={};e.id=14007,e.ids=[14007],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},57147:e=>{e.exports=require("fs")},71017:e=>{e.exports=require("path")},23413:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>h,originalPathname:()=>S,requestAsyncStorage:()=>y,routeModule:()=>v,serverHooks:()=>g,staticGenerationAsyncStorage:()=>f,staticGenerationBailout:()=>w});var s={};r.r(s),r.d(s,{GET:()=>p,POST:()=>c}),r(95655);var n=r(83323),o=r(54647),a=r(57147),i=r.n(a),u=r(71017),d=r.n(u);let l=d().join(process.cwd(),"data","tv-screens.json");async function p(e){try{let e=i().readFileSync(l,"utf-8");return new Response(e,{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return new Response(JSON.stringify({error:"TV modelleri okunamadÄ±."}),{status:500})}}async function c(e){try{let t=await e.json();return i().writeFileSync(l,JSON.stringify(t,null,2),"utf-8"),new Response(JSON.stringify({success:!0}),{status:200})}catch(e){return new Response(JSON.stringify({error:"TV modelleri kaydedilemedi."}),{status:500})}}let m=n.AppRouteRouteModule,v=new m({definition:{kind:o.x.APP_ROUTE,page:"/api/tv-models/route",pathname:"/api/tv-models",filename:"route",bundlePath:"app/api/tv-models/route"},resolvedPagePath:"C:\\Users\\ibrahim\\Downloads\\zero-git\\app\\api\\tv-models\\route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:y,staticGenerationAsyncStorage:f,serverHooks:g,headerHooks:h,staticGenerationBailout:w}=v,S="/api/tv-models/route"}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[26405],()=>r(23413));module.exports=s})();